name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ruby dependencies
        run: sudo apt-get update && sudo apt-get install -y libssl-dev libreadline-dev zlib1g-dev

      - name: Set up Ruby with rbenv
        run: |
          curl -fsSL https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-installer | bash
          echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
          echo 'eval "$(rbenv init -)"' >> ~/.bashrc
          source ~/.bashrc
          rbenv install 3.1.2
          rbenv global 3.1.2
          gem install bundler

      - name: Verify Ruby setup
        run: |
          ruby -v
          which ruby
          echo $PATH

      - name: Set execute permissions
        run: chmod +x bin/brakeman

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ruby dependencies
        run: sudo apt-get update && sudo apt-get install -y libssl-dev libreadline-dev zlib1g-dev

      - name: Set up Ruby with rbenv
        run: |
          curl -fsSL https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-installer | bash
          echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
          echo 'eval "$(rbenv init -)"' >> ~/.bashrc
          source ~/.bashrc
          rbenv install 3.1.2
          rbenv global 3.1.2
          gem install bundler

      - name: Verify Ruby setup
        run: |
          ruby -v
          which ruby
          echo $PATH

      - name: Set execute permissions
        run: chmod +x bin/importmap

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ruby dependencies
        run: sudo apt-get update && sudo apt-get install -y libssl-dev libreadline-dev zlib1g-dev

      - name: Set up Ruby with rbenv
        run: |
          curl -fsSL https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-installer | bash
          echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
          echo 'eval "$(rbenv init -)"' >> ~/.bashrc
          source ~/.bashrc
          rbenv install 3.1.2
          rbenv global 3.1.2
          gem install bundler

      - name: Verify Ruby setup
        run: |
          ruby -v
          which ruby
          echo $PATH

      - name: Set execute permissions
        run: chmod +x bin/rubocop

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips postgresql-client

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ruby dependencies
        run: sudo apt-get update && sudo apt-get install -y libssl-dev libreadline-dev zlib1g-dev

      - name: Set up Ruby with rbenv
        run: |
          curl -fsSL https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-installer | bash
          echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
          echo 'eval "$(rbenv init -)"' >> ~/.bashrc
          source ~/.bashrc
          rbenv install 3.1.2
          rbenv global 3.1.2
          gem install bundler

      - name: Verify Ruby setup
        run: |
          ruby -v
          which ruby
          echo $PATH

      - name: Set execute permissions
        run: chmod +x bin/rails

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          # REDIS_URL: redis://localhost:6379/0
        run: |
          bin/rails db:test:prepare
          bin/rails test
          bin/rails test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
